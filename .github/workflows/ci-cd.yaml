name: CI/CD Pipeline - Build & Deploy RAG Service

on:
  push:
    branches:
      - main

env:
  PROJECT_ID: podcarsten-32199
  PROJECT_NUMBER: 573158456254
  REGION: europe-west1
  ARTIFACT_REGISTRY: rag-service-repo
  SERVICE_NAME: rag-service
  SA_EMAIL: github-actions-sa@podcarsten-32199.iam.gserviceaccount.com
  WIF_POOL_ID: github-pool
  WIF_PROVIDER_ID: github-provider
  IMAGE_NAME: rag-service

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      # --- Continuous Integration (CI) Steps ---

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11' 

      - name: Install dependencies
        run: pip install -r requirements.txt
        
      - name: Run Unit Tests 
        run: pip install pytest && PYTHONPATH=. pytest .

      # --- Continuous Delivery (CD) Steps ---
      
      # 1. Authenticate with Google Cloud using the WIF Pool (Gets the token)
      - name: Authenticate to Google Cloud
        id: 'auth'
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: projects/${{ env.PROJECT_NUMBER }}/locations/global/workloadIdentityPools/${{ env.WIF_POOL_ID }}/providers/${{ env.WIF_PROVIDER_ID }}
          service_account: ${{ env.SA_EMAIL }}
          
      # 2. Configure Docker (Manual Command - Requires the propagated TokenCreator role)
      - name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev

      # 3. Build and Tag the Container Image
      - name: Build and Tag Image
        run: |
          IMAGE_TAG="${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.ARTIFACT_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}"
          docker build -t \$IMAGE_TAG .
          echo "IMAGE_TAG=\$IMAGE_TAG" >> \$GITHUB_ENV
        
      # 4. Push the Container Image to Artifact Registry
      - name: Push Image to Artifact Registry
        run: docker push ${{ env.IMAGE_TAG }}
        
      # 5. Deploy the Container to Cloud Run
      - name: Deploy to Cloud Run
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: ${{ env.SERVICE_NAME }}
          region: ${{ env.REGION }}
          image: ${{ env.IMAGE_TAG }}
          allow_unauthenticated: true